import math


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
def greet_user():
    print ('''Yo, –±—Ä–æ! 
–°–∞–ª—é—Ç! 

–ö–∞–∫ —Å–∞–º? 
–°–ø–∞—Å—ë—à—å —É—Ç–æ–ø–∞—é—â–µ–≥–æ!? 
–ò–ª–∏ "–°–ø–∞—Å–µ–Ω–∏–µ —É—Ç–æ–ø–∞—é—â–∏—Ö-–¥–µ–ª–æ —Ä—É–∫ —Å–∞–º–∏—Ö —É—Ç–æ–ø–∞—é—â–∏—Ö?"''')
    print() # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ </br>

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
def get_float_input(prompt):
    while True:
        try:
            return float(input(prompt))
        except ValueError:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –≤–≤–æ–¥ Theta –æ—Ç 0 –¥–æ 360 –≥—Ä–∞–¥—É—Å–æ–≤
def get_theta_input(prompt):
    while True:
        try:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            theta = float(input(prompt))

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 360
            if 0 <= theta <= 360:
                return int(round(theta))  # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º
            else:
                print("–û—à–∏–±–∫–∞: –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 360 –≥—Ä–∞–¥—É—Å–æ–≤.")
        except ValueError:
            print("–û—à–∏–±–∫–∞: –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —è—Ä–¥–æ–≤ –≤ —Ñ—É—Ç—ã
def yards_to_feet(yards):
    return yards * 3

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –º–∏–ª—å –≤ —á–∞—Å –≤ —Ñ—É—Ç—ã –≤ —Å–µ–∫—É–Ω–¥—É
def mph_to_fts(mph):
    return mph * 5280 / 3600

# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –•
def calculate_x(d1, theta_radians):
    return  d1 * math.tan(theta_radians)

# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è L1
def calculate_L1(x, d1):
    return math.sqrt(x**2 + d1**2)

# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è L2
def calculate_L2(h, x, d2):
    return math.sqrt((h - x)**2 + d2**2)

# –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è t
def calculate_t(L1, L2, vsand, n):
    return (1 / vsand) * (L1 + n * L2)

def main():
    greet_user()

    # –ó–∞–¥–∞—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ d1 (–≤ —è—Ä–¥–∞—Ö) –∏ theta (–≤ –≥—Ä–∞–¥—É—Å–∞—Ö)
    d1 = yards_to_feet(get_float_input('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ d1 –≤ —è—Ä–¥–∞—Ö: '))
    theta = get_theta_input('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ ùúÉ1 –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 360 –≥—Ä–∞–¥—É—Å–æ–≤: ')
    print(f'Theta = {theta}')
    print(type (theta)) # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö theta
    print()

    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É–≥–ª–∞ –∏–∑ –≥—Ä–∞–¥—É—Å–æ–≤ –≤ —Ä–∞–¥–∏–∞–Ω—ã
    theta_radians = math.radians(theta)

    # –í—ã—á–∏—Å–ª—è–µ–º x
    x = calculate_x(d1, theta_radians)
    print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç x = {x:.2f}')

    # –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏–Ω—É –ø—É—Ç–∏ L1
    L1 = calculate_L1(x, d1)
    print()

    # –í–≤–µ–¥–µ–º —Å –∫–æ–Ω—Å–æ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–∫–æ–≤–æ–≥–æ —Å–º–µ—â–µ–Ω–∏—è –º–µ–∂–¥—É —Å–ø–∞—Å–∞—Ç–µ–ª–µ–º –∏ —É—Ç–æ–ø–∞—é—â–∏–º h (–≤ —è—Ä–¥–∞—Ö)
    # –∏ d2 –∫—Ä–∞—Ç—á–∞–π—à–µ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —É—Ç–æ–ø–∞—é—â–µ–≥–æ –¥–æ –±–µ—Ä–µ–≥–∞
    h = yards_to_feet(get_float_input('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ h –≤ —è—Ä–¥–∞—Ö: '))
    d2 = get_float_input('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ d2 –≤ —Ñ—É—Ç–∞—Ö: ')

    # –í—ã—á–∏—Å–ª—è–µ–º –¥–ª–∏–Ω—É –ø—É—Ç–∏ L2
    L2 = calculate_L2(h, x, d2)

    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç L1 –∏ L2
    print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç L1 = {(format(L1,'.2f'))}; L2 = {(format(L2,'.2f'))};')
    print()

    # –í–≤–µ–¥–µ–º —Å –∫–æ–Ω—Å–æ–ª–∏ —Å–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è —Å–ø–∞—Å–∞—Ç–µ–ª—è –ø–æ –ø–µ—Å–∫—É vsand
    # –∏ n –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∑–∞–º–µ–¥–ª–µ–Ω–∏—è —Å–ø–∞—Å–∞—Ç–µ–ª—è –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏ –≤ –≤–æ–¥–µ
    vsand = mph_to_fts(get_float_input('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ vsand –≤ –º–∏–ª—è—Ö –≤ —á–∞—Å: '))
    print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ—É—Ç–∞—Ö –≤ —Å–µ–∫—É–Ω–¥—É vsand = {vsand:.2f}')
    n = get_float_input(('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ n: '))
    print()

    # –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è t –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —É—Ç–æ–ø–∞—é—â–µ–≥–æ
    t = calculate_t(L1, L2, vsand, n)
    print(f'–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ —É—Ç–æ–ø–∞—é—â–µ–≥–æ t = {(format(t,'.1f'))} —Å–µ–∫—É–Ω–¥')
    print(type(t))

if __name__ == '__main__':
    main()